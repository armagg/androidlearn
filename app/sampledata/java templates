    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        intentFilter = new IntentFilter();
        intentFilter.addAction(CONNECTIVITY_ACTION);
        receiver = new MyReceiver();

        if(hasInternet()){
            loadData();
        }else{
            updateUI();
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        //registerReceiver(receiver, intentFilter);
    }

    @Override
    protected void onPause() {
        super.onPause();
        //registerReceiver(receiver, intentFilter);
    }

    // Self explanatory method
    public boolean hasInternet() {
        ConnectivityManager connectivityManager =
                (ConnectivityManager) this.getSystemService(Context.CONNECTIVITY_SERVICE);

        NetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();
        return activeNetwork != null &&
                activeNetwork.isConnectedOrConnecting();
    }

    void loadData(){
        Log.d("my load data ", "flag 1");
        Toast.makeText(this, "internet connected", Toast.LENGTH_LONG).show();
    }

    void updateUI(){
        // No internet connection, update the ui and warn the user
        Toast.makeText(this, "internet disconnected", Toast.LENGTH_LONG).show();
        Log.d("no internet", "flag 0");
    }


    private class MyReceiver extends BroadcastReceiver {
        @Override
        public void onReceive(Context context, Intent intent) {

            String actionOfIntent = intent.getAction();
            boolean isConnected = hasInternet();
            if(actionOfIntent.equals(CONNECTIVITY_ACTION)){
                if(isConnected){
                    loadData();
                }else{
                    updateUI();
                }
            }
        }
    }













    /*    Toast.makeText(this, "vared shod ", Toast.LENGTH_LONG).show();
        NotificationCompat.Builder notifBuilder = new NotificationCompat.Builder(this);

        notifBuilder.setContentText("this is my first notif");
        notifBuilder.setSubText("hahaha ");
        notifBuilder.setSmallIcon(R.drawable.ic_launcher_foreground);
        NotificationManager notificationManager =
                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
        notificationManager.notify(001, notifBuilder.build());
    */